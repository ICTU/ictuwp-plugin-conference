.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
.visuallyvisual {
  border: inherit;
  clip: auto;
  height: auto;
  margin: auto;
  overflow: auto;
  padding: inherit;
  position: inherit;
  width: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
